package hts.backend.entity;
// Generated 15/03/2017 10:07:24 AM by Hibernate Tools 5.2.0.CR1

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * NomCatTipoPrestacion1 generated by hbm2java
 */
@Entity
@Table(name = "adm_cat_tipo_prestacion1")
public class NomCatTipoPrestacion1 implements java.io.Serializable {

	/**
	 *
	 */
	private static final long serialVersionUID = 1L;
	private int tipoPrestacion1Id;
	private NomCatTipoPrestacion2 nomCatTipoPrestacion2;
	private CatIdiomaApp catIdiomaApp;
	private String cve;
	private String nombre;
	private String descripcion;
	private int valorDefault;
	private int estatus;
	//RQM-01-SPRINT 1 /04/03/20
	private int laboratorio;
	private int gabinete;
	private Date fechaRegistro;
	private String usuarioCve;
	private Set<PrestacionTipoServesp> prestacionTipoServesps = new HashSet<PrestacionTipoServesp>(0);
	private Set<NomPrductoPrestacion> nomPrductoPrestacions = new HashSet<NomPrductoPrestacion>(0);
	private Set<CexMedicamentosMateriales> cexMedicamentosMaterialeses = new HashSet<CexMedicamentosMateriales>(0);
	private AdmHospital admHospital;
	private Integer hospitalId;

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "TIPO_PRESTACION1_ID", unique = true, nullable = false, precision = 22)
	public int getTipoPrestacion1Id() {
		return this.tipoPrestacion1Id;
	}

	public void setTipoPrestacion1Id(int tipoPrestacion1Id) {
		this.tipoPrestacion1Id = tipoPrestacion1Id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIPO_PRESTACION2_ID")
	public NomCatTipoPrestacion2 getNomCatTipoPrestacion2() {
		return this.nomCatTipoPrestacion2;
	}

	public void setNomCatTipoPrestacion2(NomCatTipoPrestacion2 nomCatTipoPrestacion2) {
		this.nomCatTipoPrestacion2 = nomCatTipoPrestacion2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDIOMA_APP_ID")
	public CatIdiomaApp getCatIdiomaApp() {
		return this.catIdiomaApp;
	}

	public void setCatIdiomaApp(CatIdiomaApp catIdiomaApp) {
		this.catIdiomaApp = catIdiomaApp;
	}

	@Column(name = "CVE", nullable = false, length = 20)
	public String getCve() {
		return this.cve;
	}

	public void setCve(String cve) {
		this.cve = cve;
	}

	@Column(name = "NOMBRE", nullable = false, length = 20)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "DESCRIPCION", nullable = false, length = 20)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "VALOR_DEFAULT", nullable = false, precision = 22)
	public int getValorDefault() {
		return this.valorDefault;
	}

	public void setValorDefault(int valorDefault) {
		this.valorDefault = valorDefault;
	}

	@Column(name = "ESTATUS", nullable = false, precision = 22)
	public int getEstatus() {
		return this.estatus;
	}

	public void setEstatus(int estatus) {
		this.estatus = estatus;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "FECHA_REGISTRO", nullable = false, length = 7)
	public Date getFechaRegistro() {
		return this.fechaRegistro;
	}

	public void setFechaRegistro(Date fechaRegistro) {
		this.fechaRegistro = fechaRegistro;
	}

	@Column(name = "USUARIO_REGISTRO", nullable = false, length = 20)
	public String getUsuarioCve() {
		return this.usuarioCve;
	}

	public void setUsuarioCve(String usuarioCve) {
		this.usuarioCve = usuarioCve;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "nomCatTipoPrestacion1")
	public Set<PrestacionTipoServesp> getPrestacionTipoServesps() {
		return this.prestacionTipoServesps;
	}

	public void setPrestacionTipoServesps(Set<PrestacionTipoServesp> prestacionTipoServesps) {
		this.prestacionTipoServesps = prestacionTipoServesps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "nomCatTipoPrestacion1")
	public Set<NomPrductoPrestacion> getNomPrductoPrestacions() {
		return this.nomPrductoPrestacions;
	}

	public void setNomPrductoPrestacions(Set<NomPrductoPrestacion> nomPrductoPrestacions) {
		this.nomPrductoPrestacions = nomPrductoPrestacions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "nomCatTipoPrestacion1")
	public Set<CexMedicamentosMateriales> getCexMedicamentosMaterialeses() {
		return cexMedicamentosMaterialeses;
	}

	public void setCexMedicamentosMaterialeses(Set<CexMedicamentosMateriales> cexMedicamentosMaterialeses) {
		this.cexMedicamentosMaterialeses = cexMedicamentosMaterialeses;
	}

	@ManyToOne
	@JoinColumn(name = "HOSPITAL_ID", insertable = false, updatable = false)
	public AdmHospital getAdmHospital() {
		return admHospital;
	}

	public void setAdmHospital(AdmHospital admHospital) {
		this.admHospital = admHospital;
	}

	@Column(name = "HOSPITAL_ID", nullable = false)
	public Integer getHospitalId() {
		return hospitalId;
	}

	public void setHospitalId(Integer hospitalId) {
		this.hospitalId = hospitalId;
	}

	@Column(name = "LABORATORIO", nullable = false)
	public int getLaboratorio() {
		return laboratorio;
	}

	public void setLaboratorio(int laboratorio) {
		this.laboratorio = laboratorio;
	}

	@Column(name = "GABINETE", nullable = false)
	public int getGabinete() {
		return gabinete;
	}

	public void setGabinete(int gabinete) {
		this.gabinete = gabinete;
	}
}
